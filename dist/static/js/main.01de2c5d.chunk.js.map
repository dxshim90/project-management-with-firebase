{"version":3,"sources":["components/layout/SignedinLinks.js","Store/actions/authActions.js","components/layout/SignedoutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/projects/CreateProject.js","Store/actions/projectActions.js","App.js","serviceWorker.js","Store/reducers/authreducer.js","Store/reducers/projectReducer.js","Store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","uid","SignedinLinks","SignedoutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownprops","match","params","data","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","_this$props","authError","onSubmit","htmlFor","onChange","creds","credentials","_ref","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","userProfile","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01de2c5d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../Store/actions/authActions'\n\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink>   </li>\n            <li><a href='null' onClick={props.signOut}>Log Out</a>   </li>\n            <li><NavLink to='/' className='btn-floating pink lighten-1'>{props.profile.initials} </NavLink>   </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\nreturn {\n    signOut: () => dispatch(signOut())\n}\n}\n\n\nexport default connect(null, mapDispatchToProps) (SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\n\n\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign Up</NavLink>   </li>\n            <li><NavLink to='/signin'>Log In</NavLink>   </li>\n        </ul>\n    )\n}\n\n\nexport default SignedOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedinLinks'\nimport SignedOutLinks from './SignedoutLinks'\nimport { connect } from 'react-redux'\n\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    return (\n        <nav className =\"nav_wrapper green darken-3\">\n            <div className=\"container\" >\n                <Link to='/' className='brand-logo'>Project Management</Link>\n                {auth.uid ? <SignedInLinks profile={profile}/> :  <SignedOutLinks/>}\n                \n               \n            </div>\n        </nav>    \n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\n\nexport default connect(mapStateToProps) (Navbar)","import React from 'react';\nimport moment from 'moment'\n\n\nconst Notifications = (props) => {\n    return (\n        <div className='section'>\n            <div className='card z-depth-0'>\n                <div className='card-content'>\n                    <span className='card-title'>Notifications</span>\n                    <ul className='notifications'>\n                       {props.notifications && props.notifications.map(item => {\n                           return (\n                               <li key={item.id}>\n                                   <span className='green-text'>{item.user}</span>\n                                   <span> {item.content}</span>\n                                   <div className='grey-text'>\n                                       {moment(item.time.toDate()).fromNow()}\n                                   </div>\n                               </li>\n                           )\n                       })}\n                    </ul>\n                </div>\n            </div>  \n        </div>\n    )\n}\n\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\n\n\nconst ProjectSummary = (props) => {\n    return (\n        <div className='card z-depth-0 project-summary'>\n        <div className=\"card-content grey-text text-darken-3\">\n        <span className='card-title'>{props.project.title}</span>\n        <p> posted By {props.project.authorFirstName} {props.project.authorLastName}</p>\n        <p className='grey-text'>{moment(props.project.createdAt.toDate()).calendar()}</p>\n \n</div>\n</div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = (props) => {\n    return (\n<div className=\"project-list section\">\n        {props.projects && props.projects.map(project => {\n          return  (\n            <Link to={`/project/${project.id}`} key={project.id}>\n            <ProjectSummary project={project} />\n            </Link>\n          )\n        })}\n\n\n</div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose }  from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Dashboard extends Component {\n    render() {\n        const { auth } = this.props\n        if(!auth.uid) return <Redirect to='signin'/>\n        return (\n            <div className='dashboard container'>\n                <div className='row'>\n                     <div className='col s12 m6'>\n                        <ProjectList projects={this.props.projects}/>\n                        </div>\n                     <div className='col s12 m5 offset-m1'>\n                         <Notifications notifications={this.props.notifications} />\n                     </div>\n\n                </div>\n                </div>\n\n\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n       { collection: 'projects',  orderBy: ['createdAt', 'desc'] },\n       { collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props\n    if(!auth.uid) return <Redirect to='signin'/>\n    if (project) {\n        return (\n        <div className='container section project-details'>\n        <div className='card z-depth-0'>\n                <div className='card-content'>\n                    <span className='card-title'>{project.title}</span>\n                        <p>{project.content}</p>\n                </div>\n                <div className='card-action grey lighten-4 grey-text'>\n                <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\n                <div>{moment(props.project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    } else {\n        return (\n            <p> Loading Projects</p>\n            )\n\n    }\n  \n}\n\nconst mapStateToProps = (state, ownprops) => {\n   \n    const id = ownprops.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n       { collection:  'projects' }\n    ])\n) (ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../Store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\n class Signin extends Component {\n     state = {\n        email: '',\n        password: ''\n\n     }\n\n     handleChange = e => {\n         this.setState({\n            [e.target.id]: e.target.value\n         })\n     }\n\n     handleSubmit = e => {\n         e.preventDefault()\n        this.props.signIn(this.state)\n     }\n\n    render() {\n        const { authError, auth } = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className='container'>\n                <form className='white' onSubmit={this.handleSubmit}>\n                    <h5 className='grey-text text darken-3'>Sign In</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='password'>password</label>\n                        <input type='password' id='password' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\n                        <div className='red-text center'>\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\n\n\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../Store/actions/authActions'\n\n class Signup extends Component {\n     state = {\n\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n\n     }\n\n     handleChange = e => {\n         this.setState({\n            [e.target.id]: e.target.value\n         })\n     }\n\n     handleSubmit = e => {\n         e.preventDefault()\n        this.props.signUp(this.state)\n     }\n\n    render() {\n        const { auth, authError } = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className='container'>\n                <form className='white' onSubmit={this.handleSubmit}>\n                    <h5 className='grey-text text darken-3'>Sign Up</h5>\n                    <div className='input-field'>\n                        <label htmlFor='email'>Email</label>\n                        <input type='email' id='email' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='password'>password</label>\n                        <input type='password' id='password' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='firstName'>First Name</label>\n                        <input type='text' id='firstName' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='lastName'>Last Name</label>\n                        <input type='text' id='lastName' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Sign UP</button>\n                        <div className='red-text center'>\n                            {authError ? <p>{authError}</p>: null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React, { Component } from 'react'\nimport { createProject } from '../../Store/actions/projectActions'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n class CreateProject extends Component {\n     state = {\n        title: '',\n        content: ''\n\n     }\n\n     handleChange = e => {\n         this.setState({\n            [e.target.id]: e.target.value\n         })\n     }\n\n     handleSubmit = e => {\n         e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n     }\n\n    render() {\n        const { auth } = this.props\n        if(!auth.uid) return <Redirect to='signin'/>\n        return (\n            <div className='container'>\n                <form className='white' onSubmit={this.handleSubmit}>\n                    <h5 className='grey-text text darken-3'>Create Project</h5>\n                    <div className='input-field'>\n                        <label htmlFor='title'>Title</label>\n                        <input type='text' id='title' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='input-field'>\n                        <label htmlFor='content'>Project content</label>\n                        <textarea id='content' className='materialize-textarea'  onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className='input-field'>\n                        <button className='btn pink lighten-1 z-depth-0'>Create Project</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","\n\nexport const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project, \n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: \"CREATE_PROJECT\", project})\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n       \n\n    }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route  } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/projects/CreateProject';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}></Route>\n          <Route path='/project/:id' component={ProjectDetails}></Route>\n          <Route path='/signin' component={Signin}></Route>\n          <Route path='/signup' component={Signup}></Route>\n          <Route path='/create' component={CreateProject}></Route>\n\n        </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n        console.log('login failed')\n        return { \n            ...state, authError: 'Login failed'\n        }\n        case 'LOGIN_SUCCESS':\n        console.log('login success')\n        return {\n            ...state, authError: null\n        }\n        case 'SIGNOUT_SUCCESS':\n        console.log('Signout Success')\n        return state\n        case 'SIGNUP_SUCCESS':\n        console.log('Signup Success')\n        return {\n            ...state, authError: null\n        }\n        case 'SIGNUP_ERROR':\n        console.log('Signup error')\n        return {\n            ...state,\n            authError: action.err.message\n        }\n        default:\n        return state\n    }\n}\n\n\n\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'Testing', content: 'lah blah blah'},\n        {id: '2', title: 'More Testing', content: 'lah blah blah'},\n        {id: '3', title: 'Still Testing', content: 'lah blah blah'}\n    ]\n}\n\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"CREATE_PROJECT\":\n        console.log(action.project)\n        return state;\n        case 'CREATE_PROJECT_ERROR':\n        console.log(action.err)\n        return state;\n        default:\n        return state\n    }\n}\n\n\n\n\nexport default projectReducer","import authReducer from './authreducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers} from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase' \n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\n\nexport default rootReducer"," import firebase from 'firebase/app'\n import 'firebase/firestore'\n import 'firebase/auth'\n \n \n \n // Your web app's Firebase configuration\n  var firebaseConfig = {\n    userProfile: 'users',\n    apiKey: \"AIzaSyDEmnZj7ESlEXtptOoKCx7xrRmYvzRdjmE\",\n    authDomain: \"project-management-3805b.firebaseapp.com\",\n    databaseURL: \"https://project-management-3805b.firebaseio.com\",\n    projectId: \"project-management-3805b\",\n    storageBucket: \"project-management-3805b.appspot.com\",\n    messagingSenderId: \"386150821110\",\n    appId: \"1:386150821110:web:674eb0609bc48cad\"\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './Store/reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { getFirestore, reduxFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from \"./config/fbconfig\"\n\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),\n    reduxFirestore(fbConfig), reactReduxFirebase(fbConfig,\n        {\n        useFirestoreForProfile: true, \n        userProfile: 'users', \n    attachAuthIsReady: true })\n    )\n)\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n        <App />\n        </Provider>, \n        document.getElementById('root'));\n        \n        // If you want your app to work offline and load faster, you can change\n        // unregister() to register() below. Note this comes with some pitfalls.\n        // Learn more about service workers: https://bit.ly/CRA-PWA\n        serviceWorker.unregister();\n\n})\n\n\n\n"],"sourceRoot":""}